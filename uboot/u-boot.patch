diff --git a/board/ti/am335x/board.c b/board/ti/am335x/board.c
index 34f987c2b7..ca380dd170 100644
--- a/board/ti/am335x/board.c
+++ b/board/ti/am335x/board.c
@@ -949,6 +949,18 @@ U_BOOT_DRVINFO(am335x_eth) = {
 #endif
 
 #ifdef CONFIG_SPL_LOAD_FIT
+int oresat_name_compare(const char *name, const char *name2) {
+	int r;
+	char *rev = board_ti_get_rev(); // always 4 chars
+	ssize_t name2_len = strlen(name2);
+	char buffer[name2_len  + 4];
+	strncpy(buffer, name2, name2_len);
+	strncpy(&buffer[name2_len], rev, 4);
+	r = !strncmp(name, buffer, name2_len + 4);
+	print("%s %s %s %d\n", name, name2, buffer, r);
+	return r;
+}
+
 int board_fit_config_name_match(const char *name)
 {
 	if (board_is_gp_evm() && !strcmp(name, "am335x-evm"))
@@ -978,6 +990,16 @@ int board_fit_config_name_match(const char *name)
 			return 0;
 		}
 	}
+	else if (board_is_oresat_c3() && oresat_name_compare(name, "oresat-c3-"))
+		return 0;
+	else if (board_is_oresat_gps() && oresat_name_compare(name, "oresat-gps-"))
+		return 0;
+	else if (board_is_oresat_st() && oresat_name_compare(name, "oresat-star-tracker-"))
+		return 0;
+	else if (board_is_oresat_dxwifi() && oresat_name_compare(name, "oresat-dxwifi-"))
+		return 0;
+	else if (board_is_oresat_cfc() && oresat_name_compare(name, "oresat-cfc-"))
+		return 0;
 	return -1;
 }
 #endif
diff --git a/board/ti/am335x/board.h b/board/ti/am335x/board.h
index 1284c160d8..ee18e2bd94 100644
--- a/board/ti/am335x/board.h
+++ b/board/ti/am335x/board.h
@@ -80,6 +80,26 @@ static inline int board_is_icev2(void)
 	return board_ti_is("A335_ICE") && !strncmp("2", board_ti_get_rev(), 1);
 }
 
+static inline int board_is_oresat_c3(void) {
+	return board_ti_is("A335OSC3");
+}
+
+static inline int board_is_oresat_gps(void) {
+	return board_ti_is("A335OGPS");
+}
+
+static inline int board_is_oresat_st(void) {
+	return board_ti_is("A335OSST");
+}
+
+static inline int board_is_oresat_dxwifi(void) {
+	return board_ti_is("A335ODWF");
+}
+
+static inline int board_is_oresat_cfc(void) {
+	return board_ti_is("A335OCFC");
+}
+
 /*
  * We have three pin mux functions that must exist.  We must be able to enable
  * uart0, for initial output and i2c0 to read the main EEPROM.  We then have a
